/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as BotRouteImport } from './routes/bot'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as LoginSuccessRouteImport } from './routes/login/success'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const BotRoute = BotRouteImport.update({
  id: '/bot',
  path: '/bot',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginSuccessRoute = LoginSuccessRouteImport.update({
  id: '/login/success',
  path: '/login/success',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/bot': typeof BotRoute
  '/settings': typeof SettingsRoute
  '/login/success': typeof LoginSuccessRoute
  '/login': typeof LoginIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/bot': typeof BotRoute
  '/settings': typeof SettingsRoute
  '/login/success': typeof LoginSuccessRoute
  '/login': typeof LoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/bot': typeof BotRoute
  '/settings': typeof SettingsRoute
  '/login/success': typeof LoginSuccessRoute
  '/login/': typeof LoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/bot' | '/settings' | '/login/success' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/bot' | '/settings' | '/login/success' | '/login'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/bot'
    | '/settings'
    | '/login/success'
    | '/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  BotRoute: typeof BotRoute
  SettingsRoute: typeof SettingsRoute
  LoginSuccessRoute: typeof LoginSuccessRoute
  LoginIndexRoute: typeof LoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bot': {
      id: '/bot'
      path: '/bot'
      fullPath: '/bot'
      preLoaderRoute: typeof BotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/success': {
      id: '/login/success'
      path: '/login/success'
      fullPath: '/login/success'
      preLoaderRoute: typeof LoginSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  BotRoute: BotRoute,
  SettingsRoute: SettingsRoute,
  LoginSuccessRoute: LoginSuccessRoute,
  LoginIndexRoute: LoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
